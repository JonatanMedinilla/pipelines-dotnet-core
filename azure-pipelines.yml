# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.

# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
  include:
  - master
 paths:
   exclude:
     - release-pipeline.yaml
  
  
pool: 
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  MyRunNumber: '1.0.0-CI-$(Build.BuildNumber)'
  MyDate: '1.0.0-CI-$(Date:yyyyMMdd)$(Rev:.r)-$(tag)'
  Version: '$(Major).$(Minor).$(Patch)-$(tag)'
  Maj: '1'
  Min: '2'
  Pat: $[counter(format('{0}.{1}', variables['Maj'], variables['Min']), 0)]
  Version2: '$(Maj).$(Min).$(Pat)-$(tag)'
  AsaQuery: 'SELECT {0} FROM {0}-{0}-{0}-{0}'
  TestFormat: $[format(variables['query'], 'Column','Table', 'Condition')]

name: $(TeamProject)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd).$(Maj).$(Min).$(Pat)-$(tag)

steps:
- bash: |
    echo "##vso[task.setvariable variable=sauce]crushed tomatoes"

# Use the variable
# "$(sauce)" is replaced by the contents of the `sauce` variable by Azure Pipelines
# before handing the body of the script to the shell.
- bash: |
    echo my pipeline variable is $(sauce)
- script: echo $(MyRunNumber) # display MyRunNumber
- script: echo $(Build.BuildNumber) #display Run Number
- script: echo $(MyDate) #display My Date
- script: echo $(Version) #display My Version
- script: echo $(Version2) #display My Version2
- bash: echo $(Build.SourceVersion) Commit ID
- bash: echo $(Build.Repository.ID) Repository Id
- bash: 'echo Query: $(AsaQuery)'
- bash: 'echo Formatted Query: $(TestFormat)'
- task: Bash@3
  name: 'asa_query_into_variable'
  displayName: 'Export ASA query text into pipeline variable'
  inputs:
    targetType: 'inline'
    script: |
      set -euxo pipefail
      ls
      echo "##vso[task.setvariable variable=query]\"`cat ./query.txt | awk '{printf "%s\\\\n", $0}'`\""
    workingDirectory: '$(Build.SourcesDirectory)'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: | 
       echo $MYVAR
  env:
    MyVar: $(query)
- bash: |
    echo $(query)

- bash: |
    echo "##vso[task.setvariable variable=TestFormat]${{format(variables['query'],'Column','Table', 'Condition')}}
- bash: |
    echo $(TestFormat)
- bash: | 
    API_URL="$SYSTEM_TEAMFOUNDATIONCOLLECTIONURI$SYSTEM_TEAMPROJECTID/_apis/git/repositories/$BUILD_REPOSITORY_ID/commits/$BUILD_SOURCEVERSION/changes?api-version=5.1" 
    echo $API_URL

- bash: | 
    API_URL="$SYSTEM_TEAMFOUNDATIONCOLLECTIONURI$SYSTEM_TEAMPROJECTID/_apis/git/repositories/$(Build.Repository.ID)/commits/$(Build.Repository.ID)/changes?api-version=5.1" 
    echo $API_URL
    curl GET -H "Content-Type: application/json" "$API_URL"
- script: dotnet build --configuration $(buildConfiguration) /p:Version=$(Version)
  displayName: 'dotnet build $(buildConfiguration) /p:Version=$(Version)'



- task: CopyFiles@2
  inputs:
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'prd'



